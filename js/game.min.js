function Texture(options){if(this.width=0,this.height=0,this.img=void 0,options){for(let prop in options)this.hasOwnProperty(prop)&&(this[prop]=options[prop]);options.hasOwnProperty("src")&&(this.img=new Image,this.img.src=options.src)}}function RayMap(options){if(this.walls=[],this.floor=[],this.ceiling=[],this.skyBox=void 0,this.light=1,this.width=0,this.height=0,this.outdoors=!1,this.wallTextures=[],this.floorTextures=[],this.ceilingTextures=[],options)for(let prop in options)this.hasOwnProperty(prop)&&(this[prop]=options[prop])}function RayCamera(options){if(this.fov=.2*CIRCLE,this.range=14,this.lightRange=5,this.position={x:0,y:0},this.direction,options)for(let prop in options)this.hasOwnProperty(prop)&&(this[prop]=options[prop]);this.spacing=this.width/this.resolution}function RaycastRenderer(options){if(this.width=GOLDENR,this.height=1,this.resolution=options.height,this.textureSmoothing=!1,this.domElement=document.createElement("canvas"),options)for(let prop in options)this.hasOwnProperty(prop)&&(this[prop]=options[prop]);this.domElement.width=this.width,this.domElement.height=this.height,this.ctx=this.domElement.getContext("2d"),this.spacing=this.width/this.resolution}function MiniMap(options){if(this.target=void 0,this.width=22,this.height=22,this.cellSize=4,options)for(let prop in options)this.hasOwnProperty(prop)&&(this[prop]=options[prop]);void 0===this.target&&(this.target=document.createElement("canvas")),this.target.width=this.width*this.cellSize,this.target.height=this.height*this.cellSize,this.ctx=this.target.getContext("2d")}function Controls(){this.codes={65:"left",68:"right",87:"forward",83:"backward"},this.states={left:!1,right:!1,forward:!1,backward:!1},document.addEventListener("keydown",this.onKey.bind(this,!0),!1),document.addEventListener("keyup",this.onKey.bind(this,!1),!1)}function UpdateRender(time){stats.begin();let seconds=(time-lastTime)/1e3;lastTime=time,seconds<.2&&(player.update(controls.states,map,seconds),ctx.clearRect(0,0,canvas.width,canvas.height),renderer.Render(camera,map),ctx.save(),ctx.translate(50,100),ctx.rotate(-(player.direction-.5*Math.PI)),miniMap.RenderRelMap(ctx,mapPos,player.position),ctx.restore()),requestAnimationFrame(UpdateRender),stats.end()}let CIRCLE=2*Math.PI,GOLDENR=(1+Math.sqrt(5))/2;RayMap.prototype={Get:function(x,y){if(x|=0,y|=0,!(x<0||x>=this.width||y<0||y>=this.height))return this.walls[y*this.width+x]},Raycast:function(point,angle,range){let stepX,stepY,nextStep,cells=[],sin=Math.sin(angle),cos=Math.cos(angle);nextStep={x:point.x,y:point.y,cell:0,distance:0};do{if(cells.push(nextStep),nextStep.cell>0)break;stepX=this.__step(sin,cos,nextStep.x,nextStep.y,!1),stepY=this.__step(cos,sin,nextStep.y,nextStep.x,!0),nextStep=stepX.length2<stepY.length2?this.__inspect(stepX,1,0,nextStep.distance,stepX.y,cos,sin,"walls"):this.__inspect(stepY,0,1,nextStep.distance,stepY.x,cos,sin,"walls")}while(nextStep.distance<=range);return cells},__step:function(rise,run,x,y,inverted){if(0===run)return{length2:1/0};let dx=run>0?Math.floor(x+1)-x:Math.ceil(x-1)-x,dy=dx*rise/run;return{x:inverted?y+dy:x+dx,y:inverted?x+dx:y+dy,length2:dx*dx+dy*dy}},__inspect:function(step,shiftX,shiftY,distance,offset,cos,sin,layer){let dx=cos<0?shiftX:0,dy=sin<0?shiftY:0,index=(step.y-dy|0)*this.width+(step.x-dx|0);return step.cell=index<0||index>=this[layer].length?-1:this[layer][index],step.distance=distance+Math.sqrt(step.length2),this.outdoors?step.shading=shiftX?cos<0?2:0:sin<1?2:1:step.shading=0,step.offset=offset-(0|offset),step}},RayCamera.prototype={Rotate:function(angle){this.direction=(this.direction+angle+CIRCLE)%CIRCLE}},RaycastRenderer.prototype={__project:function(height,angle,distance){let z=distance*Math.cos(angle),wallHeight=this.height*height/z;return{top:this.height/2*(1+1/z)-wallHeight,height:wallHeight}},__drawSky:function(camera,map){if(map.skybox&&map.skybox.img){let width=this.width*(CIRCLE/camera.fov),left=-width*camera.direction/CIRCLE;this.ctx.save(),this.ctx.drawImage(map.skybox.img,left,0,width,this.height),left<width-this.width&&this.ctx.drawImage(map.skybox.img,left+width,0,width,this.height),map.light>0&&(this.ctx.fillStyle="#ffffff",this.ctx.globalAlpha=.1*map.light,this.ctx.fillRect(0,.5*this.height,this.width,.5*this.height)),this.ctx.restore()}},__drawColumn:function(column,ray,angle,camera,textures){let left=Math.floor(column*this.spacing),width=Math.ceil(this.spacing),hit=-1;for(;++hit<ray.length&&ray[hit].cell<=0;);let texture,textureX=0;if(hit<ray.length){let step=ray[hit];texture=textures[step.cell>textures.length?0:step.cell-1],textureX=texture.width*step.offset|0;let wall=this.__project(1,angle,step.distance);this.ctx.globalAlpha=1,this.ctx.drawImage(texture.img,textureX,0,1,texture.height,left,wall.top,width,wall.height),this.ctx.fillStyle="#000000",this.ctx.globalAlpha=Math.max((step.distance+step.shading)/camera.lightRange,0),this.textureSmoothing?this.ctx.fillRect(left,wall.top,width,wall.height):this.ctx.fillRect(0|left,0|wall.top,width,wall.height+1)}},__drawColumns:function(camera,map){this.ctx.save(),this.ctx.imageSmoothingEnabled=this.textureSmoothing;for(let col=0;col<this.resolution;col++){let angle=camera.fov*(col/this.resolution-.5),ray=map.Raycast(camera.position,camera.direction+angle,camera.range);this.__drawColumn(col,ray,angle,camera,map.wallTextures)}this.ctx.restore()},Render:function(camera,map){this.__drawSky(camera,map),map.wallTextures.length>0&&this.__drawColumns(camera,map)},Raycast:function(point,angle,range){return this.map?this.map.Raycast(point,angle,range):[]}};let canvas=document.getElementById("game"),ctx=canvas.getContext("2d"),wallTex=new Texture({src:"assets/wall.gif",width:64,height:64});MiniMap.prototype={LoadMap:function(map){this.width!==map.width&&(this.width=map.width,this.target.width=this.width*this.cellSize),this.height!==map.height&&(this.height=map.height,this.target.height=this.height*this.cellSize),this.ctx.fillStyle="#b6b6b6";for(let y=0;y<this.height;y++)for(let x=0;x<this.width;x++)0===map.walls[(this.height-y-1)*map.width+(this.width-x-1)]&&this.ctx.fillRect(x*this.cellSize,y*this.cellSize,this.cellSize,this.cellSize)},RenderRelMap:function(ctx,pos,playerPos){let pX=(this.width-(0|playerPos.x)-1)*this.cellSize,pY=(this.height-(0|playerPos.y)-1)*this.cellSize;ctx.drawImage(this.target,pos.x,pos.y,this.target.width,this.target.height),ctx.fillStyle="#006eff",ctx.fillRect(pos.x+pX,pos.y+pY,this.cellSize,this.cellSize)}};let miniMap=new MiniMap,map=new RayMap({width:22,height:22,light:2,walls:[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0,1,1,0,1,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,1,1,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,0,1,0,1,0,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,0,1,1,0,1,0,0,0,0,0,1,1,0,1,0,0,0,1,1,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],wallTextures:[wallTex]});miniMap.LoadMap(map);let camera=new RayCamera,renderer=new RaycastRenderer({width:$(window).width(),height:$(window).width()/GOLDENR,textureSmoothing:!1,domElement:canvas});Controls.prototype.onKey=function(val,e){let state=this.codes[e.keyCode];void 0!==state&&(this.states[state]=val,e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation())};let controls=new Controls,player={position:{x:10,y:10},direction:0*Math.PI,rotate:function(angle){this.direction=(this.direction+angle+CIRCLE)%CIRCLE,camera.direction=this.direction},walk:function(distance,map){let dx=Math.cos(this.direction)*distance,dy=Math.sin(this.direction)*distance;map.Get(this.position.x+dx,this.position.y)<=0&&(this.position.x+=dx),map.Get(this.position.x,this.position.y+dy)<=0&&(this.position.y+=dy),camera.position.x=this.position.x,camera.position.y=this.position.y},update:function(controls,map,seconds){controls.left&&this.rotate(-3*seconds),controls.right&&this.rotate(3*seconds),controls.forward&&this.walk(3*seconds,map),controls.backward&&this.walk(-3*seconds,map)}};camera.direction=player.direction,camera.position.x=player.position.x,camera.position.y=player.position.y;let stats=new Stats;stats.setMode(0),stats.domElement.style.position="absolute",stats.domElement.style.left="0px",stats.domElement.style.top="0px",document.body.appendChild(stats.domElement);let lastTime=0,mapPos={x:-44,y:-44};requestAnimationFrame(UpdateRender);